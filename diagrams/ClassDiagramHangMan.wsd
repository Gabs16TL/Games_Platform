@startuml

package hangman {
    class HangMan {
        +NumberOfPlayers
        +TurnHangMan turnhangman
        {abstract}Introduction()
        +Resume()
        {abstract}Execute()
        {abstract}AssignRoles()
        +SelectPlayers()
    }
    class SecretWord {
        +Char GivenWords []
        +Char GuesserWords []
        +boolean AddLetter(Char letter)
        +boolean isGuesser ()
        +printGuessedWord()
    }
    class TurnHangMan {
        +HangManPlayer Giver
        +HangManPlayer Guesser
        +SecretWord secretword
        +HangedMan hangedman
    }
    class HangedMan {   
        +ATTEMPTS    
        +FailedAttempts
        +PaintHangedMan()
        +isDead()
    }

    interface HangManPlayer {
        +ChooseWord()
        +GiveLetter()
    }

}

package player {
    abstract class Player {
        +IdPlayer int
        +PlayerName String
        +ThrowDice()
    }
    class ListOfPlayers {
        +Player [] players
        +CreatePlayer()
        +GetPlayer()
    }
    class Bot {
        +ChooseWord()
        +GiveLetter()
    }
    class Human {
        +ChooseWord()
        +GiveLetter()
    }
}

package utils {
    class Dice {
        +RollTheDice()
    }
}

HangMan *--TurnHangMan
HangMan ..> ListOfPlayers
HangMan ..> Dice

Player <|-- Bot
Player <|-- Human
Player ..|> HangManPlayer
Player ..> Dice

TurnHangMan *-- HangedMan
TurnHangMan *-- HangManPlayer

HangedMan *-- SecretWord

HangManPlayer -left-> HangedMan

ListOfPlayers *-- Player

@enduml