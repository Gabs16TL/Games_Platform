@startuml

package hangman {
    class HangMan {
        # GamePlayer[] gamePlayers
        # GamePlayersProvider gamePlayersProvider
        # List<GamePlayer> results
        + Introduction()
        + Resume()
        + Execute()
        # AssignRoles (GamePlayer[] gamePlayers)
        # flipRoles (GamePlayer[] gamePlayers)
    }
    class SecretWord {
        +Char GuesserWords []
        +Char SecretWord []
        +boolean AddLetter(Char letter)
        +boolean isGuessed ()
        +printWord()
    }
    class TurnHangMan {
        +HangManPlayer Giver
        +HangManPlayer Guesser
        +HangedMan hangedman
        +HangManPlayer result
        +play()
        +getResult()
    }
    class HangedMan {
        -FailedAttempts
        -SecretWord secretWord
        +PaintHangedMan()
        +isDead()
        +isSaved()
        -addPart()
        +tryLetter()
    }
    interface HangManPlayer {
        +ChooseWord()
        +GiveLetter()
    }
}

package player {
    abstract class Player {
        +id int
        +name String
        +Player (String name)
        +getId()
        +setId()
        +getName()
        +setName()
    }
    class ListOfPlayers {
        +List<Player> playersList
        +createPlayer(Player player)
        +getPlayer(int id)
        +getList()
        +printList()
        +getGamePlayers(int size)
    }
    class Bot {
        +ChooseWord()
        +GiveLetter()
    }
    class Human {
        +ChooseWord()
        +GiveLetter()
    }
}

interface GamePlayersProvider {
    + getGamePlayers(int) : GamePlayer[]
}

interface GamePlayer {
    + processResult(Result)
}

package utils {
    class Dice {
        +generateValue(int bound)
    }
}

HangMan *--TurnHangMan
HangMan --> GamePlayersProvider
HangMan .right.> Dice
HangMan *-- GamePlayer

Player <|-- Bot
Player <|-- Human
Player .up.|> GamePlayer

TurnHangMan *-- HangedMan
TurnHangMan *-- HangManPlayer

HangedMan *-- SecretWord

HangManPlayer -left-> HangedMan
HangManPlayer <|-- GamePlayer

ListOfPlayers *-- Player
ListOfPlayers .up.|> GamePlayersProvider

GamePlayer ..>Dice

@enduml