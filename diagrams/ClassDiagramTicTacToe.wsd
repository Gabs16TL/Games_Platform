@startuml Tictactoe

package player {
    abstract class Player {
        +IdPlayer int
        +PlayerName String
        +ThrowDice()
    }
    Class ListOfPlayer {
        +Player [] players
        +CreatePlayer()
        +GetPlayer()
    }
    Class Human {
        +putMark()
    }
    Class Bot {
        +putMark()
    }
}

package util {
    class Dice {
        +RollTheDice()
    }
}

package ttt {
    class TicTacToe {
        +NumberOfPlayers
        +TurnTicTacToe turntictactoe
        {abstract}Introduction()
        +Resume()
        {abstract}Execute()
        {abstract}AssignRoles()
        +SelectPlayers()
    }
    interface TicTacToePlayer {
        +putMark()
    }
    class Turn {
        +TicTacToePlayer playerX
        +TicTacToePlayer playerO
        +Board board
        +playTurn()
        +getResult()
    }
    class Board {
            +Piece[][] pieces
            +EmptySquare: int
            +Piece[][] createBoard()
            +paintBoard()
            +isFull()
            +boolean checkMovement(int x, int y, Piece piece)
            +checkWinner(Piece box)
            +putPiece(int x, int y, Piece typeOfPiece)
        }
    Enum Piece {
        X,
        O,
        Empty
    }
}

TicTacToe *-- Turn
Turn *-- TicTacToePlayer
Board *-- Piece
TicTacToe ..> ListOfPlayer
ListOfPlayer *-- Player
Turn *-- Board
Player ..|> TicTacToePlayer
Player <|-- Human
Player <|-- Bot
TicTacToe ..> Dice
Player ..> Dice

@enduml