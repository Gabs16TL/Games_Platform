@startuml Tictactoe



class TicTacToe {
     +NumberOfPlayers
    +TurnTicTacToe turntictactoe
    {abstract}Introduction()
    +Resume()
    {abstract}Execute()
    {abstract}AssignRoles()
    +SelectPlayers()
}



package player {
abstract class Player {
    +IdPlayer int
    +PlayerName String
    +ThrowDice()
}
Class ListOfPlayer {
    +Player [] players
    +CreatePlayer()
    +GetPlayer()
}

Class Human {
    +putMark()
}

Class Bot {
  +putMark()
}
interface TicTacToePlayer {
    +putMark()
}
}




package util {
class Dice {
    +RollTheDice()
}
Enum Piece {
   X,
   O,
   Empty
}
}


package ttt {
class Turn {
    +TicTacToePlayer playerX
    +TicTacToePlayer playerO
    +Board board
    +playTurn()
    +getResult()
}
class Board {
    +Piece[][] piece
    +EmptySquare: int
    +isFull()
    +paintBoard()
    +checkWinner()
    +putPiece(int x, int y, Piece typeOfPiece)
}
}







TicTacToe *-- Turn
Turn *-- TicTacToePlayer
TicTacToe *-- Player
Board *-- Piece
TicTacToe ..> ListOfPlayer
ListOfPlayer *-- Player
Turn *-- Board
Player ..|> TicTacToePlayer
Player <|-- Human
Player <|-- Bot
Turn --> Player
TicTacToe ..> Dice
Player ..> Dice

@enduml