@startuml

class GamesPlatform {
    +ListOfPlayers
    +showPlayersList()
    +createPlayer()
    +PlayGame(Game game)
    +Game[] games
    +ShowMenu()
}

package game {
    abstract class Game {
        - GamePlayer[] gamePlayers
        - GamePlayersProvider gamePlayersProvider
        +NumberOfPlayers
        {abstract}Introduction()
        +Resume()
        {abstract}Execute()
        {abstract}AssignRoles()
        +SelectPlayers()
    }
    package tictactoe {
        class TicTacToe {

        }
        interface TicTacToePlayer {

        }
    }
    package hangman {
        class HangMan {
            
        }
        interface HangManPlayer{

        }
    }
    interface GamePlayer {
        + processResult(Result)
    }
    interface GamePlayersProvider {
        + getGamePlayers(int) : GamePlayer[]
    }
}

package player {
    abstract class Player {
        +IdPlayer int
        +PlayerName String
        +ThrowDice()
    }
    class ListOfPlayers {
        +Player[] players
        +CreatePlayer()
        +GetPlayer()
    }
    class Bot {

    }
    class Human {

    }
}

GamesPlatform *-- "2" Game
GamesPlatform *-- ListOfPlayers

Game <|-- TicTacToe
Game <|-- HangMan
Game --> GamePlayersProvider

Player <|-- Bot
Player <|-- Human
Player ..|> GamePlayer

Game *-- GamePlayer

ListOfPlayers *-- Player
ListOfPlayers ..|> GamePlayersProvider

TicTacToe *-- TicTacToePlayer
HangMan *-- HangManPlayer

GamePlayer ..|> TicTacToePlayer
GamePlayer ..|> HangManPlayer

@enduml